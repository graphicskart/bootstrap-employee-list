{"version":3,"sources":["components/Employees.js","components/Employee.js","App.js","serviceWorker.js","index.js","assets/images/user1.png"],"names":["employees","name","email","image","require","empCode","designation","phone","joiningDate","Employees","react_default","a","createElement","Col","xs","className","Row","sm","map","employee","key","components_Employee","Object","assign","index","Button","variant","Component","Employee","props","_props$index","_props$name","_props$email","_props$image","_props$empCode","_props$designation","_props$phone","_props$joiningDate","src","App","Employees_Employees","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.76cdeebc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport { Employee } from \"../components\";\n\nconst employees = [\n  {\n    name: \"Jimmy Henderson\",\n    email: \"henderson399@gmail.com\",\n    image: require(\"../assets/images/user1.png\"),\n    empCode: \"CU009\",\n    designation: \"Angular Developer\",\n    phone: \"788-998-1643\",\n    joiningDate: \"Mar 27, 2016\"\n  },\n  {\n    name: \"Jimmy Henderson\",\n    email: \"henderson399@gmail.com\",\n    image: require(\"../assets/images/user1.png\"),\n    empCode: \"CU009\",\n    designation: \"Angular Developer\",\n    phone: \"788-998-1643\",\n    joiningDate: \"Mar 27, 2016\"\n  },\n  {\n    name: \"Jimmy Henderson\",\n    email: \"henderson399@gmail.com\",\n    image: require(\"../assets/images/user1.png\"),\n    empCode: \"CU009\",\n    designation: \"Angular Developer\",\n    phone: \"788-998-1643\",\n    joiningDate: \"Mar 27, 2016\"\n  },\n  {\n    name: \"Jimmy Henderson\",\n    email: \"henderson399@gmail.com\",\n    image: require(\"../assets/images/user1.png\"),\n    empCode: \"CU009\",\n    designation: \"Angular Developer\",\n    phone: \"788-998-1643\",\n    joiningDate: \"Mar 27, 2016\"\n  },\n  {\n    name: \"Jimmy Henderson\",\n    email: \"henderson399@gmail.com\",\n    image: require(\"../assets/images/user1.png\"),\n    empCode: \"CU009\",\n    designation: \"Angular Developer\",\n    phone: \"788-998-1643\",\n    joiningDate: \"Mar 27, 2016\"\n  }\n];\nexport default class Employees extends Component {\n  render() {\n    return (\n      <Col xs={12}>\n        <Col xs={12} className=\"header grey d-none d-sm-block\">\n          <Row>\n            <Col xs={12} sm={1} />\n            <Col xs={12} sm={3} className=\"text-center\">\n              Basic Info\n            </Col>\n            <Col xs={12} sm={1} className=\"text-center\">\n              Emp Code\n            </Col>\n            <Col xs={12} sm={2} className=\"text-center\">\n              Designation\n            </Col>\n            <Col xs={12} sm={2} className=\"text-center\">\n              Phone Number\n            </Col>\n            <Col xs={12} sm={2} className=\"text-center\">\n              Joining Date\n            </Col>\n          </Row>\n        </Col>\n        {employees.map((employee, key) => (\n          <Employee key={key} {...employee} index={key} />\n        ))}\n        <Col xs={12} className=\"text-center load-more\">\n          <Button variant=\"outline-primary\">Load More</Button>\n        </Col>\n      </Col>\n    );\n  }\n}\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Employee = props => {\n  const {\n    index = 0,\n    name = \"\",\n    email = \"\",\n    image = \"\",\n    empCode = \"\",\n    designation = \"\",\n    phone = \"\",\n    joiningDate = \"\"\n  } = props;\n\n  return (\n    <Col xs={12} className=\"employee\">\n      <Row>\n        <Col xs={1} sm={1} className=\"text grey\">\n          <span>{index + 1}</span>\n        </Col>\n        <Col xs={2} sm={1} className=\"text\">\n          <img src={image} />\n        </Col>\n        <Col xs={7} sm={2}>\n          <Row>\n            <Col xs={12} className=\"name\">\n              {name}\n            </Col>\n            <Col xs={12} className=\"email d-none d-sm-block\">\n              {email}\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={12} sm={1} className=\"text d-none d-sm-block\">\n          <span>{empCode}</span>\n        </Col>\n        <Col xs={12} sm={2} className=\"text d-none d-sm-block\">\n          <span>{designation}</span>\n        </Col>\n        <Col xs={12} sm={2} className=\"text d-none d-sm-block\">\n          <span>{phone}</span>\n        </Col>\n        <Col xs={12} sm={2} className=\"text d-none d-sm-block\">\n          <span>{joiningDate}</span>\n        </Col>\n        <Col xs={1} sm={1} className=\"text grey\">\n          <i className=\"fas fa-ellipsis-v menu\" />\n        </Col>\n      </Row>\n    </Col>\n  );\n};\n\nexport default Employee;\n","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport { Employees } from \"./components\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Col xs={12} className=\"main\">\n        <Employees />\n      </Col>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/user1.87cb924a.png\";"],"sourceRoot":""}